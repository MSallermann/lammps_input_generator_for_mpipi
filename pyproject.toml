[project]
name = "mpipi_lammps_gen"
version = "0.1.0"

dependencies = ["numpy"]


requires-python = ">= 3.10"
authors = [
    { name = "Moritz Sallermann", email = "mos19@hi.is" },
    { name = "Amrita Goswami", email = "amrita@hi.is" },
]

license-files = ["LICEN[CS]E*"]

[project.scripts]
mpipi-builder = "mpipi_lammps_gen.gui.main:main"

[project.optional-dependencies]
gui = ["pyside6", "polars", "rich", "requests"]

[tool.pyright]
include = ["src/mpipi_lammps_gen"]
defineConstant = { DEBUG = true }
stubPath = "src/stubs"
strict = []

[tool.ruff.lint]
select = ['ALL']
exclude = ["docs/*", "noxfile.py"]
ignore = [
    'PLR2004', # "magic" values
    'S101',    # because we'r using assert in pytest
    'D',
    'ANN002',  # Type annotation for args
    'ANN003',  # Type annotation of kwargs
    'ANN201',  # return type annotation
    'ANN202',  # return type annotation
    'ANN204',  # return type annotation
    'ANN401',  # Allow `Any` type annotation
    'ERA001',  # commented out code
    'INP001',  # implicit namespace
    'T201',    # `print`
    'COM812',  # missing trailing comma
    'TRY',     # lots of noise
    'E501',    # line too long (handled by formatter)
    'C901',    # function too complex
    'PT012',   # pytest.raises should contain a single line
    'PGH003',  # use specific rule codes
    'N803',    # method arguments should be lowercase
    'N806',    # variable names should be lowercase
    'G004',    # Logger uses f-string
    'TC001',   # Type checking blocks
    'TC002',   # Type checking blocks
    'PLR0913', # too many arguments in function definition
    'BLE001',  # do not catch blind exceptions
    'FBT001',  # boolean default args
    'FBT002',  # boolean default args
    'N818',    # pep8 naming of exceptions (ussing <Nmae>Error)
    'PD901',   # I like df
    'FIX002',
]
